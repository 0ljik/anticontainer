{
	"type": "sandbox",
	"ns": "downthemall.net",
	"prefix": "VZ Album expander",
	"match": "^http://(www\\.)?(?:studi|mein|schueler)vz\\.net/Photos/Album/[^/]+/[^/]+(/p/\\d+)?$",
	"resolve": "\"use strict\";\nvar reImages = /<a[^>]+href=\"(\\/Photos\\/View\\/[^\"]+)\"/img;\nvar rePages = /<a href=\"[^\"]+\\/p\\/(\\d+)\" class=\"pager\" title=\"(\\d+)\"/ig;\n\nvar url = baseURL.match(\n  /((http:\\/\\/(?:www\\.)?(?:studi|mein|schueler)vz\\.net)\\/Photos\\/Album\\/[^\\/]+\\/[^\\/]+)(?:\\/p\\/(\\d+))?/i\n);\nvar curPage = parseInt(url[3], 10) || 1;\nvar maxPage = curPage;\nvar loaded = 0;\nvar images = [];\n\n// get maximum page\nvar match;\nwhile ((match = rePages.exec(responseText))) {\n  maxPage = Math.max(maxPage, match[2]);\n}\n\nfunction parsePage (page) {\n  var req = new XMLHttpRequest();\n  req.onload = function() {\n    var m;\n    while ((m = reImages.exec(req.responseText))) {\n      images[page-1].push(url[2] + m[1]);\n    }\n    tryContinue();\n  };\n  req.onerror = function() {\n    markGone();\n    finish();\n  };\n  req.open('GET', url[1] + '/p/' + page);\n  req.send();\n}\n\nfunction tryContinue () {\n  if (++loaded < maxPage) {\n    return;\n  }\n  for (var i = 0; i < maxPage; i++) {\n    for (var url of images[i]) {\n      queueDownload(url);\n    }\n  }\n  setURL(null);\n  finish();\n}\n\nfor (var i = 1; i <= maxPage; i++) {\n  images[i - 1] = [];\n  if (i != curPage) {\n    parsePage(i);\n  }\n  else {\n    var m;\n    while ((m = reImages.exec(responseText))) {\n      images[i - 1].push(url[2] + m[1]);\n    }\n    tryContinue();\n  }\n}\n"
}